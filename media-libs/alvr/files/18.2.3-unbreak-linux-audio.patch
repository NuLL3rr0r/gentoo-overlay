From 8e515545e952fe3171aa6fe852e8bf6625fc318c Mon Sep 17 00:00:00 2001
From: Aidan Thornton <makosoft@gmail.com>
Date: Tue, 17 May 2022 19:51:36 +0100
Subject: [PATCH] Unbreak Linux audio by selecting 48kHz sampling rate if given
 choice

Audio servers like PulseAudio that are standard on Linux allow
arbitrary sample rates, all the way down to 1 Hz. The code currently
just chooses the lowest supported sample rate which breaks badly.
Choose 48000 as a reasonable default if given free choice.
(This is the usual native sample rate on most modern systems,
including Linux and Android, and should be a safe choice.)
---
 alvr/audio/src/lib.rs | 21 +++++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/alvr/audio/src/lib.rs b/alvr/audio/src/lib.rs
index 5ae132da2..9cee599be 100644
--- a/alvr/audio/src/lib.rs
+++ b/alvr/audio/src/lib.rs
@@ -3,7 +3,7 @@ use alvr_session::{AudioConfig, AudioDeviceId, LinuxAudioBackend};
 use alvr_sockets::{StreamReceiver, StreamSender};
 use cpal::{
     traits::{DeviceTrait, HostTrait, StreamTrait},
-    BufferSize, Device, Sample, SampleFormat, StreamConfig,
+    BufferSize, Device, Sample, SampleFormat, SampleRate, StreamConfig,
 };
 use rodio::{OutputStream, Source};
 use std::{
@@ -286,9 +286,18 @@ pub fn get_sample_rate(device: &AudioDevice) -> StrResult<u32> {
             .ok_or_else(enone!())?
     };
 
-    // Assumption: device is in shared mode: this means that there is one and fixed sample rate,
-    // format and channel count
-    Ok(config.min_sample_rate().0)
+    // In theory we should check all configs for a 48000 sample rate.
+    // In practice it seems like most stuff we care about supports one sample rate
+    // or arbitrary ones, and this is enough to unbreak the common Linux desktop
+    // audio setups. Could be revisited later if this ever turns out to matter.
+
+    if config.min_sample_rate().0 <= 48000 && config.max_sample_rate().0 >= 48000 {
+        Ok(48000)
+    } else {
+        // Assumption: device is in shared mode: this means that there is one and fixed sample rate,
+        // format and channel count
+        Ok(config.min_sample_rate().0)
+    }
 }
 
 #[cfg_attr(not(windows), allow(unused_variables))]
@@ -315,7 +324,7 @@ pub async fn record_audio_loop(
             .ok_or_else(enone!())?
     };
 
-    if sample_rate != config.min_sample_rate().0 {
+    if sample_rate < config.min_sample_rate().0 || sample_rate > config.max_sample_rate().0 {
         return fmt_e!("Sample rate not supported");
     }
 
@@ -328,7 +337,7 @@ pub async fn record_audio_loop(
 
     let stream_config = StreamConfig {
         channels: config.channels(),
-        sample_rate: config.min_sample_rate(),
+        sample_rate: SampleRate(sample_rate),
         buffer_size: BufferSize::Default,
     };
 
