--- a/third_party/abseil-cpp/absl/crc/BUILD.gn
+++ b/third_party/abseil-cpp/absl/crc/BUILD.gn
@@ -29,10 +29,6 @@
     "//third_party/abseil-cpp/absl/base",
     "//third_party/abseil-cpp/absl/base:config",
     "//third_party/abseil-cpp/absl/base:core_headers",
-    "//third_party/abseil-cpp/absl/base:dynamic_annotations",
-    "//third_party/abseil-cpp/absl/base:endian",
-    "//third_party/abseil-cpp/absl/base:prefetch",
-    "//third_party/abseil-cpp/absl/base:raw_logging_internal",
     "//third_party/abseil-cpp/absl/memory",
     "//third_party/abseil-cpp/absl/numeric:bits",
   ]
@@ -58,9 +54,6 @@
     ":non_temporal_memcpy",
     "//third_party/abseil-cpp/absl/base:config",
     "//third_party/abseil-cpp/absl/base:core_headers",
-    "//third_party/abseil-cpp/absl/base:dynamic_annotations",
-    "//third_party/abseil-cpp/absl/base:endian",
-    "//third_party/abseil-cpp/absl/base:prefetch",
     "//third_party/abseil-cpp/absl/strings",
   ]
 }
@@ -97,7 +90,6 @@
     ":crc32c",
     "//third_party/abseil-cpp/absl/memory",
     "//third_party/abseil-cpp/absl/random",
-    "//third_party/abseil-cpp/absl/random:distributions",
     "//third_party/abseil-cpp/absl/strings",
   ]
 }
--- a/third_party/abseil-cpp/BUILD.gn
+++ b/third_party/abseil-cpp/BUILD.gn
@@ -61,7 +61,6 @@
     "//third_party/abseil-cpp/absl/base",
     "//third_party/abseil-cpp/absl/base:config",
     "//third_party/abseil-cpp/absl/base:core_headers",
-    "//third_party/abseil-cpp/absl/base:prefetch",
     "//third_party/abseil-cpp/absl/cleanup",
     "//third_party/abseil-cpp/absl/container:btree",
     "//third_party/abseil-cpp/absl/container:fixed_array",
@@ -77,15 +76,11 @@
     "//third_party/abseil-cpp/absl/functional:bind_front",
     "//third_party/abseil-cpp/absl/functional:function_ref",
     "//third_party/abseil-cpp/absl/hash",
-    "//third_party/abseil-cpp/absl/log:absl_check",
-    "//third_party/abseil-cpp/absl/log:absl_log",
-    "//third_party/abseil-cpp/absl/log:die_if_null",
     "//third_party/abseil-cpp/absl/memory",
     "//third_party/abseil-cpp/absl/meta:type_traits",
     "//third_party/abseil-cpp/absl/numeric:bits",
     "//third_party/abseil-cpp/absl/numeric:int128",
     "//third_party/abseil-cpp/absl/random",
-    "//third_party/abseil-cpp/absl/random:distributions",
     "//third_party/abseil-cpp/absl/status",
     "//third_party/abseil-cpp/absl/status:statusor",
     "//third_party/abseil-cpp/absl/strings",
@@ -201,12 +196,9 @@
         "absl/crc:crc_cord_state_test",
         "absl/crc:crc_memcpy_test",
         "absl/crc:non_temporal_memcpy_test",
-        "absl/debugging:stacktrace_test",
         "absl/functional:any_invocable_test",
         "absl/hash:hash_test",
         "absl/hash:low_level_hash_test",
-        "absl/log:absl_check_test",
-        "absl/log:absl_log_basic_test",
         "absl/log:die_if_null_test",
         "absl/log:flags_test",
         "absl/log:globals_test",
@@ -221,7 +213,6 @@
         "absl/log/internal:stderr_log_sink_test",
         "absl/memory:memory_test",
         "absl/meta:type_traits_test",
-        "absl/numeric:int128_test",
         "absl/profiling:exponential_biased_test",
         "absl/profiling:periodic_sampler_test",
         "absl/status:statusor_test",
@@ -238,13 +229,9 @@
         "absl/strings:cordz_test",
         "absl/strings:cordz_update_scope_test",
         "absl/strings:cordz_update_tracker_test",
-        "absl/strings:damerau_levenshtein_distance_test",
         "absl/strings:match_test",
         "absl/strings:str_replace_test",
         "absl/strings:string_view_test",
-        "absl/synchronization:kernel_timeout_internal_test",
-        "absl/synchronization:waiter_test",
-        "absl/time:time_test",
         "absl/types:optional_test",
         "absl/types:variant_test",
         "//third_party/googletest:gtest_main",
--- a/build/linux/unbundle/absl_base.gn
+++ b/build/linux/unbundle/absl_base.gn
@@ -1,5 +1,6 @@
 import("//build/config/linux/pkg_config.gni")
 import("//build/shim_headers.gni")
+import("//third_party/abseil-cpp/absl.gni")
 
 pkg_config("system_absl_base") {
   packages = [ "absl_base" ]
@@ -27,18 +28,12 @@
   public_configs = [ ":system_absl_base" ]
 }
 
-shim_headers("config_shim") {
-  root_path = "."
-  prefix = "absl/base/"
-  headers = [
+absl_source_set("config") {
+  public = [
     "config.h",
     "options.h",
     "policy_checks.h",
   ]
-}
-
-source_set("config") {
-  deps = [ ":config_shim" ]
   public_configs = [ ":system_absl_config" ]
 }
 
